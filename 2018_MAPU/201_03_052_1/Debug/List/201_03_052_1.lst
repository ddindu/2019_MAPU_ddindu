
AVRASM ver. 2.1.30  D:\2018_MAPU\201_03_052_1\Debug\List\201_03_052_1.asm Thu Oct 25 16:13:56 2018

D:\2018_MAPU\201_03_052_1\Debug\List\201_03_052_1.asm(1097): warning: Register r4 already defined by the .DEF directive
D:\2018_MAPU\201_03_052_1\Debug\List\201_03_052_1.asm(1098): warning: Register r5 already defined by the .DEF directive
D:\2018_MAPU\201_03_052_1\Debug\List\201_03_052_1.asm(1099): warning: Register r6 already defined by the .DEF directive
D:\2018_MAPU\201_03_052_1\Debug\List\201_03_052_1.asm(1100): warning: Register r7 already defined by the .DEF directive
D:\2018_MAPU\201_03_052_1\Debug\List\201_03_052_1.asm(1101): warning: Register r8 already defined by the .DEF directive
D:\2018_MAPU\201_03_052_1\Debug\List\201_03_052_1.asm(1102): warning: Register r9 already defined by the .DEF directive
D:\2018_MAPU\201_03_052_1\Debug\List\201_03_052_1.asm(1103): warning: Register r10 already defined by the .DEF directive
D:\2018_MAPU\201_03_052_1\Debug\List\201_03_052_1.asm(1104): warning: Register r11 already defined by the .DEF directive
D:\2018_MAPU\201_03_052_1\Debug\List\201_03_052_1.asm(1105): warning: Register r12 already defined by the .DEF directive
D:\2018_MAPU\201_03_052_1\Debug\List\201_03_052_1.asm(1106): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.32a Evaluation
                 ;(C) Copyright 1998-2017 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128A
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _a=R4
                 	.DEF _a_msb=R5
                 	.DEF _b=R6
                 	.DEF _b_msb=R7
                 	.DEF _c=R8
                 	.DEF _c_msb=R9
                 	.DEF _d=R10
                 	.DEF _d_msb=R11
                 	.DEF _e=R12
                 	.DEF _e_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005b 	JMP  __RESET
000002 940c 008b 	JMP  _ext_int0
000004 940c 00a7 	JMP  _ext_int1
000006 940c 00c3 	JMP  _ext_int2
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000046 0000
000047 0000      	.DB  0x0,0x0,0x0,0x0
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0
00004a 0000      	.DB  0x0,0x0
                 
                 _0x3:
00004b f9c0
00004c b0a4
00004d 9299
00004e d882      	.DB  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xD8
00004f 9880      	.DB  0x80,0x98
                 _0x4:
D:\2018_MAPU\201_03_052_1\Debug\List\201_03_052_1.asm(1161): warning: .cseg .db misalignment - padding zero byte
000050 0001      	.DB  0x1
                 
                 __GLOBAL_INI_TBL:
000051 000a      	.DW  0x0A
000052 0004      	.DW  0x04
000053 008c      	.DW  __REG_VARS*2
                 
000054 000a      	.DW  0x0A
000055 0500      	.DW  _fnd
000056 0096      	.DW  _0x3*2
                 
000057 0001      	.DW  0x01
000058 050c      	.DW  _am
000059 00a0      	.DW  _0x4*2
                 
                 _0xFFFFFFFF:
00005a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00005b 94f8      	CLI
00005c 27ee      	CLR  R30
00005d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005e e0f1      	LDI  R31,1
00005f bff5      	OUT  MCUCR,R31
000060 bfe5      	OUT  MCUCR,R30
000061 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000063 e08d      	LDI  R24,(14-2)+1
000064 e0a2      	LDI  R26,2
000065 27bb      	CLR  R27
                 __CLEAR_REG:
000066 93ed      	ST   X+,R30
000067 958a      	DEC  R24
000068 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000069 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006a e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00006b e0a0      	LDI  R26,LOW(__SRAM_START)
00006c e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00006d 93ed      	ST   X+,R30
00006e 9701      	SBIW R24,1
00006f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000070 eae2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000071 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000072 9185      	LPM  R24,Z+
000073 9195      	LPM  R25,Z+
000074 9700      	SBIW R24,0
000075 f061      	BREQ __GLOBAL_INI_END
000076 91a5      	LPM  R26,Z+
000077 91b5      	LPM  R27,Z+
000078 9005      	LPM  R0,Z+
000079 9015      	LPM  R1,Z+
00007a 01bf      	MOVW R22,R30
00007b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00007c 9005      	LPM  R0,Z+
00007d 920d      	ST   X+,R0
00007e 9701      	SBIW R24,1
00007f f7e1      	BRNE __GLOBAL_INI_LOOP
000080 01fb      	MOVW R30,R22
000081 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000082 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000083 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000084 bfed      	OUT  SPL,R30
000085 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000086 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000087 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000088 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000089 940c 00ec 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;#define Q0  PORTB.0
                 ;#define Q1  PORTB.1
                 ;#define Q2  PORTB.2
                 ;#define Q3  PORTB.3
                 ;#define Q4  PORTB.4
                 ;#define Q5  PORTB.5
                 ;
                 ;unsigned char fnd[10]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xd8,0x80,0x98};
                 
                 	.DSEG
                 ;int a=0,b=0,c=0,d=0,e=0,f=0,am=1,pm=0;
                 ;int s=0,m=0,h=0,x;
                 ;
                 ;interrupt [EXT_INT0] void ext_int0 (void){
                 ; 0000 000F interrupt [2] void ext_int0 (void){
                 
                 	.CSEG
                 _ext_int0:
                 ; .FSTART _ext_int0
00008b d0fd      	RCALL SUBOPT_0x0
                 ; 0000 0010     while(PIND.0==0){
                 _0x5:
00008c 9980      	SBIC 0x10,0
00008d c018      	RJMP _0x7
                 ; 0000 0011         delay_ms(1);
00008e e0a1      	LDI  R26,LOW(1)
00008f e0b0      	LDI  R27,0
000090 d1f6      	RCALL _delay_ms
                 ; 0000 0012         while(PIND.0!=1){
                 _0x8:
000091 9980      	SBIC 0x10,0
000092 c011      	RJMP _0xA
                 ; 0000 0013             Q0=0,Q1=1,Q2=1,Q3=1,Q4=1,Q5=1;PORTA=fnd[a];delay_ms(1);
000093 d103      	RCALL SUBOPT_0x1
                 ; 0000 0014             Q0=1,Q1=0,Q2=1,Q3=1,Q4=1,Q5=1;PORTA=fnd[b];delay_ms(1);
                 ; 0000 0015             Q0=1,Q1=1,Q2=0,Q3=1,Q4=1,Q5=1;PORTA=fnd[c];delay_ms(1);
000094 d127      	RCALL SUBOPT_0x2
                 ; 0000 0016             Q0=1,Q1=1,Q2=1,Q3=0,Q4=1,Q5=1;PORTA=fnd[d];delay_ms(1);
                 ; 0000 0017             Q0=1,Q1=1,Q2=1,Q3=1,Q4=0,Q5=1;PORTA=fnd[e];delay_ms(1);
                 ; 0000 0018             Q0=1,Q1=1,Q2=1,Q3=1,Q4=1,Q5=0;PORTA=fnd[f];delay_ms(1);
000095 d150      	RCALL SUBOPT_0x3
                 ; 0000 0019             if(am==1)PORTC=0x01;
000096 f411      	BRNE _0x53
000097 e0e1      	LDI  R30,LOW(1)
000098 bbe5      	OUT  0x15,R30
                 ; 0000 001A             if(pm==1)PORTC=0x02;
                 _0x53:
000099 d161      	RCALL SUBOPT_0x4
00009a 9711      	SBIW R26,1
00009b f411      	BRNE _0x54
00009c e0e2      	LDI  R30,LOW(2)
00009d bbe5      	OUT  0x15,R30
                 ; 0000 001B             if(pm==2)PORTC=0x02;
                 _0x54:
00009e d15c      	RCALL SUBOPT_0x4
00009f 9712      	SBIW R26,2
0000a0 f411      	BRNE _0x55
0000a1 e0e2      	LDI  R30,LOW(2)
0000a2 bbe5      	OUT  0x15,R30
                 ; 0000 001C             }
                 _0x55:
0000a3 cfed      	RJMP _0x8
                 _0xA:
                 ; 0000 001D             s++;
0000a4 d15b      	RCALL SUBOPT_0x5
                 ; 0000 001E             }
0000a5 cfe6      	RJMP _0x5
                 _0x7:
                 ; 0000 001F             }
0000a6 c037      	RJMP _0x14D
                 ; .FEND
                 ;            interrupt [EXT_INT1] void ext_int1 (void)
                 ; 0000 0021             {
                 _ext_int1:
                 ; .FSTART _ext_int1
0000a7 d0e1      	RCALL SUBOPT_0x0
                 ; 0000 0022                 while(PIND.1==0){
                 _0x56:
0000a8 9981      	SBIC 0x10,1
0000a9 c018      	RJMP _0x58
                 ; 0000 0023                 delay_ms(1);
0000aa e0a1      	LDI  R26,LOW(1)
0000ab e0b0      	LDI  R27,0
0000ac d1da      	RCALL _delay_ms
                 ; 0000 0024                 while(PIND.1!=1){
                 _0x59:
0000ad 9981      	SBIC 0x10,1
0000ae c011      	RJMP _0x5B
                 ; 0000 0025             Q0=0,Q1=1,Q2=1,Q3=1,Q4=1,Q5=1;PORTA=fnd[a];delay_ms(1);
0000af d0e7      	RCALL SUBOPT_0x1
                 ; 0000 0026             Q0=1,Q1=0,Q2=1,Q3=1,Q4=1,Q5=1;PORTA=fnd[b];delay_ms(1);
                 ; 0000 0027             Q0=1,Q1=1,Q2=0,Q3=1,Q4=1,Q5=1;PORTA=fnd[c];delay_ms(1);
0000b0 d10b      	RCALL SUBOPT_0x2
                 ; 0000 0028             Q0=1,Q1=1,Q2=1,Q3=0,Q4=1,Q5=1;PORTA=fnd[d];delay_ms(1);
                 ; 0000 0029             Q0=1,Q1=1,Q2=1,Q3=1,Q4=0,Q5=1;PORTA=fnd[e];delay_ms(1);
                 ; 0000 002A             Q0=1,Q1=1,Q2=1,Q3=1,Q4=1,Q5=0;PORTA=fnd[f];delay_ms(1);
0000b1 d134      	RCALL SUBOPT_0x3
                 ; 0000 002B             if(am==1)PORTC=0x01;
0000b2 f411      	BRNE _0xA4
0000b3 e0e1      	LDI  R30,LOW(1)
0000b4 bbe5      	OUT  0x15,R30
                 ; 0000 002C             if(pm==1)PORTC=0x02;
                 _0xA4:
0000b5 d145      	RCALL SUBOPT_0x4
0000b6 9711      	SBIW R26,1
0000b7 f411      	BRNE _0xA5
0000b8 e0e2      	LDI  R30,LOW(2)
0000b9 bbe5      	OUT  0x15,R30
                 ; 0000 002D             if(pm==2)PORTC=0x02;
                 _0xA5:
0000ba d140      	RCALL SUBOPT_0x4
0000bb 9712      	SBIW R26,2
0000bc f411      	BRNE _0xA6
0000bd e0e2      	LDI  R30,LOW(2)
0000be bbe5      	OUT  0x15,R30
                 ; 0000 002E             }
                 _0xA6:
0000bf cfed      	RJMP _0x59
                 _0x5B:
                 ; 0000 002F             m++;
0000c0 d147      	RCALL SUBOPT_0x6
                 ; 0000 0030             }
0000c1 cfe6      	RJMP _0x56
                 _0x58:
                 ; 0000 0031             }
0000c2 c01b      	RJMP _0x14D
                 ; .FEND
                 ;            interrupt [EXT_INT2] void ext_int2 (void)
                 ; 0000 0033             {
                 _ext_int2:
                 ; .FSTART _ext_int2
0000c3 d0c5      	RCALL SUBOPT_0x0
                 ; 0000 0034                 while(PIND.2==0){
                 _0xA7:
0000c4 9982      	SBIC 0x10,2
0000c5 c018      	RJMP _0xA9
                 ; 0000 0035                 delay_ms(1);
0000c6 e0a1      	LDI  R26,LOW(1)
0000c7 e0b0      	LDI  R27,0
0000c8 d1be      	RCALL _delay_ms
                 ; 0000 0036                 while(PIND.2!=1){
                 _0xAA:
0000c9 9982      	SBIC 0x10,2
0000ca c011      	RJMP _0xAC
                 ; 0000 0037                  Q0=0,Q1=1,Q2=1,Q3=1,Q4=1,Q5=1;PORTA=fnd[a];delay_ms(1);
0000cb d0cb      	RCALL SUBOPT_0x1
                 ; 0000 0038             Q0=1,Q1=0,Q2=1,Q3=1,Q4=1,Q5=1;PORTA=fnd[b];delay_ms(1);
                 ; 0000 0039             Q0=1,Q1=1,Q2=0,Q3=1,Q4=1,Q5=1;PORTA=fnd[c];delay_ms(1);
0000cc d0ef      	RCALL SUBOPT_0x2
                 ; 0000 003A             Q0=1,Q1=1,Q2=1,Q3=0,Q4=1,Q5=1;PORTA=fnd[d];delay_ms(1);
                 ; 0000 003B             Q0=1,Q1=1,Q2=1,Q3=1,Q4=0,Q5=1;PORTA=fnd[e];delay_ms(1);
                 ; 0000 003C             Q0=1,Q1=1,Q2=1,Q3=1,Q4=1,Q5=0;PORTA=fnd[f];delay_ms(1);
0000cd d118      	RCALL SUBOPT_0x3
                 ; 0000 003D             if(am==1)PORTC=0x01;
0000ce f411      	BRNE _0xF5
0000cf e0e1      	LDI  R30,LOW(1)
0000d0 bbe5      	OUT  0x15,R30
                 ; 0000 003E             if(pm==1)PORTC=0x02;
                 _0xF5:
0000d1 d129      	RCALL SUBOPT_0x4
0000d2 9711      	SBIW R26,1
0000d3 f411      	BRNE _0xF6
0000d4 e0e2      	LDI  R30,LOW(2)
0000d5 bbe5      	OUT  0x15,R30
                 ; 0000 003F             if(pm==2)PORTC=0x02;
                 _0xF6:
0000d6 d124      	RCALL SUBOPT_0x4
0000d7 9712      	SBIW R26,2
0000d8 f411      	BRNE _0xF7
0000d9 e0e2      	LDI  R30,LOW(2)
0000da bbe5      	OUT  0x15,R30
                 ; 0000 0040             }
                 _0xF7:
0000db cfed      	RJMP _0xAA
                 _0xAC:
                 ; 0000 0041             h++;
0000dc d133      	RCALL SUBOPT_0x7
                 ; 0000 0042 }
0000dd cfe6      	RJMP _0xA7
                 _0xA9:
                 ; 0000 0043 }
                 _0x14D:
0000de 91e9      	LD   R30,Y+
0000df bfef      	OUT  SREG,R30
0000e0 91f9      	LD   R31,Y+
0000e1 91e9      	LD   R30,Y+
0000e2 91b9      	LD   R27,Y+
0000e3 91a9      	LD   R26,Y+
0000e4 9199      	LD   R25,Y+
0000e5 9189      	LD   R24,Y+
0000e6 9179      	LD   R23,Y+
0000e7 9169      	LD   R22,Y+
0000e8 90f9      	LD   R15,Y+
0000e9 9019      	LD   R1,Y+
0000ea 9009      	LD   R0,Y+
0000eb 9518      	RETI
                 ; .FEND
                 ;void main(void){
                 ; 0000 0044 void main(void){
                 _main:
                 ; .FSTART _main
                 ; 0000 0045 
                 ; 0000 0046     EICRA = 0x2a;
0000ec e2ea      	LDI  R30,LOW(42)
0000ed 93e0 006a 	STS  106,R30
                 ; 0000 0047     EIMSK=0x07;
0000ef e0e7      	LDI  R30,LOW(7)
0000f0 bfe9      	OUT  0x39,R30
                 ; 0000 0048     #asm("sei");
0000f1 9478      	SEI
                 ; 0000 0049 
                 ; 0000 004A     PORTB=0x00;
0000f2 e0e0      	LDI  R30,LOW(0)
0000f3 bbe8      	OUT  0x18,R30
                 ; 0000 004B     DDRB=0xff;
0000f4 efef      	LDI  R30,LOW(255)
0000f5 bbe7      	OUT  0x17,R30
                 ; 0000 004C     PORTC=0x00;
0000f6 e0e0      	LDI  R30,LOW(0)
0000f7 bbe5      	OUT  0x15,R30
                 ; 0000 004D     DDRC=0xff;
0000f8 efef      	LDI  R30,LOW(255)
0000f9 bbe4      	OUT  0x14,R30
                 ; 0000 004E 
                 ; 0000 004F     PORTA=0x00;
0000fa e0e0      	LDI  R30,LOW(0)
0000fb bbeb      	OUT  0x1B,R30
                 ; 0000 0050     DDRA=0xff;
0000fc efef      	LDI  R30,LOW(255)
0000fd bbea      	OUT  0x1A,R30
                 ; 0000 0051 
                 ; 0000 0052     while(1){
                 _0xF8:
                 ; 0000 0053         a=(h%100)/10;
0000fe d119      	RCALL SUBOPT_0x8
0000ff d11d      	RCALL SUBOPT_0x9
000100 012f      	MOVW R4,R30
                 ; 0000 0054         b=(h%10)/1;
000101 d116      	RCALL SUBOPT_0x8
000102 e0ea      	LDI  R30,LOW(10)
000103 e0f0      	LDI  R31,HIGH(10)
000104 d166      	RCALL __MODW21
000105 013f      	MOVW R6,R30
                 ; 0000 0055         c=(m%100)/10;
000106 d11e      	RCALL SUBOPT_0xA
000107 d115      	RCALL SUBOPT_0x9
000108 014f      	MOVW R8,R30
                 ; 0000 0056         d=(m%10)/1;
000109 d11b      	RCALL SUBOPT_0xA
00010a e0ea      	LDI  R30,LOW(10)
00010b e0f0      	LDI  R31,HIGH(10)
00010c d15e      	RCALL __MODW21
00010d 015f      	MOVW R10,R30
                 ; 0000 0057         e=(s%100)/10;
00010e d11b      	RCALL SUBOPT_0xB
00010f d10d      	RCALL SUBOPT_0x9
000110 016f      	MOVW R12,R30
                 ; 0000 0058         f=(s%10)/1;
000111 d118      	RCALL SUBOPT_0xB
000112 e0ea      	LDI  R30,LOW(10)
000113 e0f0      	LDI  R31,HIGH(10)
000114 d156      	RCALL __MODW21
000115 93e0 050a 	STS  _f,R30
000117 93f0 050b 	STS  _f+1,R31
                 ; 0000 0059 
                 ; 0000 005A         Q0=0,Q1=1,Q2=1,Q3=1,Q4=1,Q5=1;
000119 d07d      	RCALL SUBOPT_0x1
                 ; 0000 005B         PORTA=fnd[a];
                 ; 0000 005C         delay_ms(1);
                 ; 0000 005D 
                 ; 0000 005E         Q0=1,Q1=0,Q2=1,Q3=1,Q4=1,Q5=1;
                 ; 0000 005F         PORTA=fnd[b];
                 ; 0000 0060         delay_ms(1);
                 ; 0000 0061 
                 ; 0000 0062         Q0=1,Q1=1,Q2=0,Q3=1,Q4=1,Q5=1;
                 ; 0000 0063         PORTA=fnd[c];
00011a d0a1      	RCALL SUBOPT_0x2
                 ; 0000 0064         delay_ms(1);
                 ; 0000 0065 
                 ; 0000 0066         Q0=1,Q1=1,Q2=1,Q3=0,Q4=1,Q5=1;
                 ; 0000 0067         PORTA=fnd[d];
                 ; 0000 0068         delay_ms(1);
                 ; 0000 0069 
                 ; 0000 006A         Q0=1,Q1=1,Q2=1,Q3=1,Q4=0,Q5=1;
                 ; 0000 006B         PORTA=fnd[e];
                 ; 0000 006C         delay_ms(1);
                 ; 0000 006D 
                 ; 0000 006E         Q0=1,Q1=1,Q2=1,Q3=1,Q4=1,Q5=0;
00011b d0ca      	RCALL SUBOPT_0x3
                 ; 0000 006F         PORTA=fnd[f];
                 ; 0000 0070         delay_ms(1);
                 ; 0000 0071          if(am==1)PORTC=0x01;
00011c f411      	BRNE _0x143
00011d e0e1      	LDI  R30,LOW(1)
00011e bbe5      	OUT  0x15,R30
                 ; 0000 0072          if(pm==1)PORTC=0x02;
                 _0x143:
00011f d0db      	RCALL SUBOPT_0x4
000120 9711      	SBIW R26,1
000121 f411      	BRNE _0x144
000122 e0e2      	LDI  R30,LOW(2)
000123 bbe5      	OUT  0x15,R30
                 ; 0000 0073          if(pm==2)PORTC=0x02;
                 _0x144:
000124 d0d6      	RCALL SUBOPT_0x4
000125 9712      	SBIW R26,2
000126 f411      	BRNE _0x145
000127 e0e2      	LDI  R30,LOW(2)
000128 bbe5      	OUT  0x15,R30
                 ; 0000 0074          x++;
                 _0x145:
000129 e1a6      	LDI  R26,LOW(_x)
00012a e0b5      	LDI  R27,HIGH(_x)
00012b 91ed      	LD   R30,X+
00012c 91fd      	LD   R31,X+
00012d 9631      	ADIW R30,1
00012e 93fe      	ST   -X,R31
00012f 93ee      	ST   -X,R30
                 ; 0000 0075          if(x==166)
000130 91a0 0516 	LDS  R26,_x
000132 91b0 0517 	LDS  R27,_x+1
000134 3aa6      	CPI  R26,LOW(0xA6)
000135 e0e0      	LDI  R30,HIGH(0xA6)
000136 07be      	CPC  R27,R30
000137 f439      	BRNE _0x146
                 ; 0000 0076          {
                 ; 0000 0077          x=1;s++;
000138 e0e1      	LDI  R30,LOW(1)
000139 e0f0      	LDI  R31,HIGH(1)
00013a 93e0 0516 	STS  _x,R30
00013c 93f0 0517 	STS  _x+1,R31
00013e d0c1      	RCALL SUBOPT_0x5
                 ; 0000 0078          }
                 ; 0000 0079 
                 ; 0000 007A          if(s>59){
                 _0x146:
00013f d0ea      	RCALL SUBOPT_0xB
000140 97dc      	SBIW R26,60
000141 f034      	BRLT _0x147
                 ; 0000 007B          m++;
000142 d0c5      	RCALL SUBOPT_0x6
                 ; 0000 007C          s=0;
000143 e0e0      	LDI  R30,LOW(0)
000144 93e0 0510 	STS  _s,R30
000146 93e0 0511 	STS  _s+1,R30
                 ; 0000 007D          }
                 ; 0000 007E          if(m>59){
                 _0x147:
000148 d0dc      	RCALL SUBOPT_0xA
000149 97dc      	SBIW R26,60
00014a f034      	BRLT _0x148
                 ; 0000 007F          h++;
00014b d0c4      	RCALL SUBOPT_0x7
                 ; 0000 0080          m=0;
00014c e0e0      	LDI  R30,LOW(0)
00014d 93e0 0512 	STS  _m,R30
00014f 93e0 0513 	STS  _m+1,R30
                 ; 0000 0081          }
                 ; 0000 0082          if(am==1&h>=12){
                 _0x148:
000151 91a0 050c 	LDS  R26,_am
000153 91b0 050d 	LDS  R27,_am+1
000155 d0d9      	RCALL SUBOPT_0xC
000156 d0dd      	RCALL SUBOPT_0xD
000157 f059      	BREQ _0x149
                 ; 0000 0083             am=0;pm=1;
000158 e0e0      	LDI  R30,LOW(0)
000159 93e0 050c 	STS  _am,R30
00015b 93e0 050d 	STS  _am+1,R30
00015d e0e1      	LDI  R30,LOW(1)
00015e e0f0      	LDI  R31,HIGH(1)
00015f d0d9      	RCALL SUBOPT_0xE
                 ; 0000 0084             h=12;
000160 e0ec      	LDI  R30,LOW(12)
000161 e0f0      	LDI  R31,HIGH(12)
000162 d0db      	RCALL SUBOPT_0xF
                 ; 0000 0085             }
                 ; 0000 0086          if(pm==1&h>=13){
                 _0x149:
000163 d097      	RCALL SUBOPT_0x4
000164 d0ca      	RCALL SUBOPT_0xC
000165 e0ed      	LDI  R30,LOW(13)
000166 e0f0      	LDI  R31,HIGH(13)
000167 d0e5      	RCALL __GEW12
000168 21e0      	AND  R30,R0
000169 f031      	BREQ _0x14A
                 ; 0000 0087             h=1;pm=2;
00016a e0e1      	LDI  R30,LOW(1)
00016b e0f0      	LDI  R31,HIGH(1)
00016c d0d1      	RCALL SUBOPT_0xF
00016d e0e2      	LDI  R30,LOW(2)
00016e e0f0      	LDI  R31,HIGH(2)
00016f d0c9      	RCALL SUBOPT_0xE
                 ; 0000 0088             }
                 ; 0000 0089             if(pm==2&h>=12){
                 _0x14A:
000170 d08a      	RCALL SUBOPT_0x4
000171 e0e2      	LDI  R30,LOW(2)
000172 e0f0      	LDI  R31,HIGH(2)
000173 d0d3      	RCALL __EQW12
000174 2e0e      	MOV  R0,R30
000175 d0a2      	RCALL SUBOPT_0x8
000176 d0bd      	RCALL SUBOPT_0xD
000177 f079      	BREQ _0x14B
                 ; 0000 008A             am=1;pm=0;
000178 e0e1      	LDI  R30,LOW(1)
000179 e0f0      	LDI  R31,HIGH(1)
00017a 93e0 050c 	STS  _am,R30
00017c 93f0 050d 	STS  _am+1,R31
00017e e0e0      	LDI  R30,LOW(0)
00017f 93e0 050e 	STS  _pm,R30
000181 93e0 050f 	STS  _pm+1,R30
                 ; 0000 008B             h=0;
000183 93e0 0514 	STS  _h,R30
000185 93e0 0515 	STS  _h+1,R30
                 ; 0000 008C             }
                 ; 0000 008D             }
                 _0x14B:
000187 cf76      	RJMP _0xF8
                 ; 0000 008E             }
                 _0x14C:
000188 cfff      	RJMP _0x14C
                 ; .FEND
                 ;
                 ;
                 
                 	.DSEG
                 _fnd:
000500           	.BYTE 0xA
                 _f:
00050a           	.BYTE 0x2
                 _am:
00050c           	.BYTE 0x2
                 _pm:
00050e           	.BYTE 0x2
                 _s:
000510           	.BYTE 0x2
                 _m:
000512           	.BYTE 0x2
                 _h:
000514           	.BYTE 0x2
                 _x:
000516           	.BYTE 0x2
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x0:
000189 920a      	ST   -Y,R0
00018a 921a      	ST   -Y,R1
00018b 92fa      	ST   -Y,R15
00018c 936a      	ST   -Y,R22
00018d 937a      	ST   -Y,R23
00018e 938a      	ST   -Y,R24
00018f 939a      	ST   -Y,R25
000190 93aa      	ST   -Y,R26
000191 93ba      	ST   -Y,R27
000192 93ea      	ST   -Y,R30
000193 93fa      	ST   -Y,R31
000194 b7ef      	IN   R30,SREG
000195 93ea      	ST   -Y,R30
000196 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:103 WORDS
                 SUBOPT_0x1:
000197 98c0      	CBI  0x18,0
000198 9ac1      	SBI  0x18,1
000199 9ac2      	SBI  0x18,2
00019a 9ac3      	SBI  0x18,3
00019b 9ac4      	SBI  0x18,4
00019c 9ac5      	SBI  0x18,5
00019d e0a0      	LDI  R26,LOW(_fnd)
00019e e0b5      	LDI  R27,HIGH(_fnd)
00019f 0da4      	ADD  R26,R4
0001a0 1db5      	ADC  R27,R5
0001a1 91ec      	LD   R30,X
0001a2 bbeb      	OUT  0x1B,R30
0001a3 e0a1      	LDI  R26,LOW(1)
0001a4 e0b0      	LDI  R27,0
0001a5 d0e1      	RCALL _delay_ms
0001a6 9ac0      	SBI  0x18,0
0001a7 98c1      	CBI  0x18,1
0001a8 9ac2      	SBI  0x18,2
0001a9 9ac3      	SBI  0x18,3
0001aa 9ac4      	SBI  0x18,4
0001ab 9ac5      	SBI  0x18,5
0001ac e0a0      	LDI  R26,LOW(_fnd)
0001ad e0b5      	LDI  R27,HIGH(_fnd)
0001ae 0da6      	ADD  R26,R6
0001af 1db7      	ADC  R27,R7
0001b0 91ec      	LD   R30,X
0001b1 bbeb      	OUT  0x1B,R30
0001b2 e0a1      	LDI  R26,LOW(1)
0001b3 e0b0      	LDI  R27,0
0001b4 d0d2      	RCALL _delay_ms
0001b5 9ac0      	SBI  0x18,0
0001b6 9ac1      	SBI  0x18,1
0001b7 98c2      	CBI  0x18,2
0001b8 9ac3      	SBI  0x18,3
0001b9 9ac4      	SBI  0x18,4
0001ba 9ac5      	SBI  0x18,5
0001bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:118 WORDS
                 SUBOPT_0x2:
0001bc e0a0      	LDI  R26,LOW(_fnd)
0001bd e0b5      	LDI  R27,HIGH(_fnd)
0001be 0da8      	ADD  R26,R8
0001bf 1db9      	ADC  R27,R9
0001c0 91ec      	LD   R30,X
0001c1 bbeb      	OUT  0x1B,R30
0001c2 e0a1      	LDI  R26,LOW(1)
0001c3 e0b0      	LDI  R27,0
0001c4 d0c2      	RCALL _delay_ms
0001c5 9ac0      	SBI  0x18,0
0001c6 9ac1      	SBI  0x18,1
0001c7 9ac2      	SBI  0x18,2
0001c8 98c3      	CBI  0x18,3
0001c9 9ac4      	SBI  0x18,4
0001ca 9ac5      	SBI  0x18,5
0001cb e0a0      	LDI  R26,LOW(_fnd)
0001cc e0b5      	LDI  R27,HIGH(_fnd)
0001cd 0daa      	ADD  R26,R10
0001ce 1dbb      	ADC  R27,R11
0001cf 91ec      	LD   R30,X
0001d0 bbeb      	OUT  0x1B,R30
0001d1 e0a1      	LDI  R26,LOW(1)
0001d2 e0b0      	LDI  R27,0
0001d3 d0b3      	RCALL _delay_ms
0001d4 9ac0      	SBI  0x18,0
0001d5 9ac1      	SBI  0x18,1
0001d6 9ac2      	SBI  0x18,2
0001d7 9ac3      	SBI  0x18,3
0001d8 98c4      	CBI  0x18,4
0001d9 9ac5      	SBI  0x18,5
0001da e0a0      	LDI  R26,LOW(_fnd)
0001db e0b5      	LDI  R27,HIGH(_fnd)
0001dc 0dac      	ADD  R26,R12
0001dd 1dbd      	ADC  R27,R13
0001de 91ec      	LD   R30,X
0001df bbeb      	OUT  0x1B,R30
0001e0 e0a1      	LDI  R26,LOW(1)
0001e1 e0b0      	LDI  R27,0
0001e2 d0a4      	RCALL _delay_ms
0001e3 9ac0      	SBI  0x18,0
0001e4 9ac1      	SBI  0x18,1
0001e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0x3:
0001e6 9ac2      	SBI  0x18,2
0001e7 9ac3      	SBI  0x18,3
0001e8 9ac4      	SBI  0x18,4
0001e9 98c5      	CBI  0x18,5
0001ea 91e0 050a 	LDS  R30,_f
0001ec 91f0 050b 	LDS  R31,_f+1
0001ee 50e0      	SUBI R30,LOW(-_fnd)
0001ef 4ffb      	SBCI R31,HIGH(-_fnd)
0001f0 81e0      	LD   R30,Z
0001f1 bbeb      	OUT  0x1B,R30
0001f2 e0a1      	LDI  R26,LOW(1)
0001f3 e0b0      	LDI  R27,0
0001f4 d092      	RCALL _delay_ms
0001f5 91a0 050c 	LDS  R26,_am
0001f7 91b0 050d 	LDS  R27,_am+1
0001f9 9711      	SBIW R26,1
0001fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x4:
0001fb 91a0 050e 	LDS  R26,_pm
0001fd 91b0 050f 	LDS  R27,_pm+1
0001ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
000200 e1a0      	LDI  R26,LOW(_s)
000201 e0b5      	LDI  R27,HIGH(_s)
000202 91ed      	LD   R30,X+
000203 91fd      	LD   R31,X+
000204 9631      	ADIW R30,1
000205 93fe      	ST   -X,R31
000206 93ee      	ST   -X,R30
000207 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
000208 e1a2      	LDI  R26,LOW(_m)
000209 e0b5      	LDI  R27,HIGH(_m)
00020a 91ed      	LD   R30,X+
00020b 91fd      	LD   R31,X+
00020c 9631      	ADIW R30,1
00020d 93fe      	ST   -X,R31
00020e 93ee      	ST   -X,R30
00020f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
000210 e1a4      	LDI  R26,LOW(_h)
000211 e0b5      	LDI  R27,HIGH(_h)
000212 91ed      	LD   R30,X+
000213 91fd      	LD   R31,X+
000214 9631      	ADIW R30,1
000215 93fe      	ST   -X,R31
000216 93ee      	ST   -X,R30
000217 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x8:
000218 91a0 0514 	LDS  R26,_h
00021a 91b0 0515 	LDS  R27,_h+1
00021c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x9:
00021d e6e4      	LDI  R30,LOW(100)
00021e e0f0      	LDI  R31,HIGH(100)
00021f d04b      	RCALL __MODW21
000220 01df      	MOVW R26,R30
000221 e0ea      	LDI  R30,LOW(10)
000222 e0f0      	LDI  R31,HIGH(10)
000223 d042      	RCALL __DIVW21
000224 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xA:
000225 91a0 0512 	LDS  R26,_m
000227 91b0 0513 	LDS  R27,_m+1
000229 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xB:
00022a 91a0 0510 	LDS  R26,_s
00022c 91b0 0511 	LDS  R27,_s+1
00022e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC:
00022f e0e1      	LDI  R30,LOW(1)
000230 e0f0      	LDI  R31,HIGH(1)
000231 d015      	RCALL __EQW12
000232 2e0e      	MOV  R0,R30
000233 cfe4      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000234 e0ec      	LDI  R30,LOW(12)
000235 e0f0      	LDI  R31,HIGH(12)
000236 d016      	RCALL __GEW12
000237 21e0      	AND  R30,R0
000238 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000239 93e0 050e 	STS  _pm,R30
00023b 93f0 050f 	STS  _pm+1,R31
00023d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
00023e 93e0 0514 	STS  _h,R30
000240 93f0 0515 	STS  _h+1,R31
000242 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __ANEGW1:
000243 95f1      	NEG  R31
000244 95e1      	NEG  R30
000245 40f0      	SBCI R31,0
000246 9508      	RET
                 
                 __EQW12:
000247 17ea      	CP   R30,R26
000248 07fb      	CPC  R31,R27
000249 e0e1      	LDI  R30,1
00024a f009      	BREQ __EQW12T
00024b 27ee      	CLR  R30
                 __EQW12T:
00024c 9508      	RET
                 
                 __GEW12:
00024d 17ae      	CP   R26,R30
00024e 07bf      	CPC  R27,R31
00024f e0e1      	LDI  R30,1
000250 f40c      	BRGE __GEW12T
000251 27ee      	CLR  R30
                 __GEW12T:
000252 9508      	RET
                 
                 __DIVW21U:
000253 2400      	CLR  R0
000254 2411      	CLR  R1
000255 e190      	LDI  R25,16
                 __DIVW21U1:
000256 0faa      	LSL  R26
000257 1fbb      	ROL  R27
000258 1c00      	ROL  R0
000259 1c11      	ROL  R1
00025a 1a0e      	SUB  R0,R30
00025b 0a1f      	SBC  R1,R31
00025c f418      	BRCC __DIVW21U2
00025d 0e0e      	ADD  R0,R30
00025e 1e1f      	ADC  R1,R31
00025f c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000260 60a1      	SBR  R26,1
                 __DIVW21U3:
000261 959a      	DEC  R25
000262 f799      	BRNE __DIVW21U1
000263 01fd      	MOVW R30,R26
000264 01d0      	MOVW R26,R0
000265 9508      	RET
                 
                 __DIVW21:
000266 d012      	RCALL __CHKSIGNW
000267 dfeb      	RCALL __DIVW21U
000268 f40e      	BRTC __DIVW211
000269 dfd9      	RCALL __ANEGW1
                 __DIVW211:
00026a 9508      	RET
                 
                 __MODW21:
00026b 94e8      	CLT
00026c ffb7      	SBRS R27,7
00026d c004      	RJMP __MODW211
00026e 95b1      	NEG  R27
00026f 95a1      	NEG  R26
000270 40b0      	SBCI R27,0
000271 9468      	SET
                 __MODW211:
000272 fdf7      	SBRC R31,7
000273 dfcf      	RCALL __ANEGW1
000274 dfde      	RCALL __DIVW21U
000275 01fd      	MOVW R30,R26
000276 f40e      	BRTC __MODW212
000277 dfcb      	RCALL __ANEGW1
                 __MODW212:
000278 9508      	RET
                 
                 __CHKSIGNW:
000279 94e8      	CLT
00027a fff7      	SBRS R31,7
00027b c002      	RJMP __CHKSW1
00027c dfc6      	RCALL __ANEGW1
00027d 9468      	SET
                 __CHKSW1:
00027e ffb7      	SBRS R27,7
00027f c006      	RJMP __CHKSW2
000280 95b1      	NEG  R27
000281 95a1      	NEG  R26
000282 40b0      	SBCI R27,0
000283 f800      	BLD  R0,0
000284 9403      	INC  R0
000285 fa00      	BST  R0,0
                 __CHKSW2:
000286 9508      	RET
                 
                 _delay_ms:
000287 9610      	adiw r26,0
000288 f039      	breq __delay_ms1
                 __delay_ms0:
000289 95a8      	wdr
                +
00028a ed80     +LDI R24 , LOW ( 0x7D0 )
00028b e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00028c 9701     +SBIW R24 , 1
00028d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00028e 9711      	sbiw r26,1
00028f f7c9      	brne __delay_ms0
                 __delay_ms1:
000290 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128A register use summary:
r0 :  18 r1 :   7 r2 :   0 r3 :   0 r4 :   2 r5 :   1 r6 :   2 r7 :   1 
r8 :   2 r9 :   1 r10:   2 r11:   1 r12:   2 r13:   1 r14:   0 r15:   2 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   4 r23:   2 
r24:  12 r25:   7 r26:  59 r27:  45 r28:   1 r29:   1 r30: 143 r31:  43 
x  :  24 y  :  24 z  :   8 
Registers used: 26 out of 35 (74.3%)

ATmega128A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   6 add   :   6 
adiw  :   5 and   :   2 andi  :   0 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   6 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   2 brmi  :   0 brne  :  19 brpl  :   0 brsh  :   0 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :   0 
cbi   :   6 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   6 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   0 
cp    :   2 cpc   :   3 cpi   :   1 cpse  :   0 dec   :   2 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 
ijmp  :   0 in    :   1 inc   :   1 jmp   :  36 ld    :  26 ldd   :   0 
ldi   : 109 lds   :  16 lpm   :   7 lsl   :   1 lsr   :   0 mov   :   2 
movw  :  12 mul   :   0 muls  :   0 mulsu :   0 neg   :   6 nop   :   0 
or    :   0 ori   :   0 out   :  32 pop   :   0 push  :   0 rcall :  76 
ret   :  23 reti  :   1 rjmp  :  22 rol   :   3 ror   :   0 sbc   :   1 
sbci  :   4 sbi   :  30 sbic  :   6 sbis  :   0 sbiw  :  16 sbr   :   1 
sbrc  :   1 sbrs  :   3 sec   :   0 seh   :   0 sei   :   1 sen   :   0 
ser   :   0 ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  23 std   :   0 sts   :  22 sub   :   1 subi  :   1 
swap  :   0 tst   :   0 wdr   :   1 
Instructions used: 52 out of 117 (44.4%)

ATmega128A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000522   1272     42   1314  131072   1.0%
[.dseg] 0x000100 0x000518      0     24     24    4096   0.6%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 11 warnings
