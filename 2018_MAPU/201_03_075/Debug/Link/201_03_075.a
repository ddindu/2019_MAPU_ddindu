;/*
; * 201_03_075.c
; *
; * Created: 2018-12-06 ¿ÀÈÄ 3:0:15
; * Author: Administrator
; */
;#include <mega128a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <delay.h>
;
;#define FUNCSET 0x28
;#define ENTMODE 0x06
;#define ALLCLR 0x01
;#define DISPON 0x0c
;#define DISPOFF 0x08
;#define LINE1 0x80
;#define LINE2 0xc0
;#define HOME 0x02
;#define LSHIFT 0x18
;#define CURON 0x0f
;
;typedef unsigned char BYTE;
;int hour=12, min=0, sec=0;
;BYTE tog=0, set=0;
;
;void lcd_init(void);
;void lcd_string1(char *str);
;void busy(void);
;void command(unsigned char);
;void data(unsigned char);
;void timer_inter_init(void);
;void exter_inter_init(void);
;void time_display(void);
;void count_up(void);
;
;void main(void)
; 0000 0025 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0026     DDRB=0xff;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0027     lcd_init();
;PCODE: $00000010 VOL: 0
; 0000 0028     timer_inter_init();
;PCODE: $00000011 VOL: 0
; 0000 0029     exter_inter_init();
;PCODE: $00000012 VOL: 0
; 0000 002A     time_display();
;PCODE: $00000013 VOL: 0
; 0000 002B     SREG|=0x80;
;PCODE: $00000014 VOL: 0
; 0000 002C     while (1);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 002D }
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;void lcd_init(void) {
; 0000 002F void lcd_init(void) {
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0030     DDRC=0xff;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0031     PORTC&=0xfb;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0032     delay_ms(15);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0033     command(0x20);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0034     delay_us(5);
;PCODE: $00000026 VOL: 0
; 0000 0035     command(0x20);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0036     delay_us(100);
;PCODE: $00000029 VOL: 0
; 0000 0037     command(0x20);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0038     command(FUNCSET);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0039     command(DISPON);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 003A     command(ALLCLR);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 003B     command(ENTMODE);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 003C }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;
;void lcd_string1(char *str) {
; 0000 003E void lcd_string1(char *str) {
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 003F     while(*str) data(*str++);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;	*str -> R16,R17
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0040 }
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;
;void command(unsigned char byte) {
; 0000 0042 void command(unsigned char byte) {
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0043     busy();
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;	byte -> R17
;PCODE: $0000004E VOL: 0
; 0000 0044     PORTC=(byte&0xf0);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0045     PORTC&=0xfe;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0046     PORTC&=0xfd;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0047     delay_us(1);
;PCODE: $00000056 VOL: 0
; 0000 0048     PORTC|=0x04;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0049     delay_us(1);
;PCODE: $00000059 VOL: 0
; 0000 004A     PORTC&=0xfb;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 004B     PORTC=((byte<<4)&0xf0);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 004C     PORTC&=0xfe;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 004D     PORTC&=0xfd;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 004E     delay_us(1);
;PCODE: $00000064 VOL: 0
; 0000 004F 
; 0000 0050     PORTC|=0x04;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0051     delay_us(1);
;PCODE: $00000067 VOL: 0
; 0000 0052     PORTC&=0xfb;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0053 }
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;
;void data(unsigned char byte) {
; 0000 0055 void data(unsigned char byte) {
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0056     busy();
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;	byte -> R17
;PCODE: $00000071 VOL: 0
; 0000 0057     PORTC=(byte&0xf0);
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0058     PORTC|=0x01;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0059     PORTC&=0xfd;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 005A     delay_us(1);
;PCODE: $00000079 VOL: 0
; 0000 005B     PORTC|=0x04;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 005C     delay_us(1);
;PCODE: $0000007C VOL: 0
; 0000 005D     PORTC&=0xfb;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 005E 
; 0000 005F     PORTC=((byte<<4)&0xf0);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0060     PORTC|=0x01;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0061     PORTC&=0xfd;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0062     delay_us(1);
;PCODE: $00000087 VOL: 0
; 0000 0063     PORTC|=0x04;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0064     delay_us(1);
;PCODE: $0000008A VOL: 0
; 0000 0065     PORTC&=0xfb;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0066 }
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;
;void busy(void) {
; 0000 0068 void busy(void) {
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0069     delay_ms(2);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 006A }
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;
;void timer_inter_init(void) {
; 0000 006C void timer_inter_init(void) {
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 006D     ETIMSK = 0x01;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 006E     TCCR1A = 0x04;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 006F     TCCR1B = 0x05;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0070     TCNT1 = 0x0000;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0071     OCR1CH = (7812 & 0xff00)>>8;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0072     OCR1CL = 0b00110000;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0073 }
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;
;void exter_inter_init(void) {
; 0000 0075 void exter_inter_init(void) {
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0076     EICRB = 0b00001010;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0077     EIMSK = 0b00110000;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0078 }
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;
;void time_display(void) {
; 0000 007A void time_display(void) {
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 007B     char time_buff[16];
; 0000 007C     sprintf(time_buff,"%02u : %02u : %02u",hour,min,sec);
;PCODE: $000000B1 VOL: 0
;	time_buff -> Y+0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 007D     command(HOME);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 007E     lcd_string1(time_buff);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 007F }
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;
;void count_up(void) {
; 0000 0081 void count_up(void) {
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0082     if(sec!=59) sec++;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 0083     else {
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0084         sec=0;
;PCODE: $000000D5 VOL: 0
; 0000 0085         if(min!=59) min++;
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0086         else {
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0087             min=0;
;PCODE: $000000DE VOL: 0
; 0000 0088             if(hour!=12) hour++;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0089             else hour = 1;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 008A         }
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 008B     }
;PCODE: $000000EB VOL: 0
; 0000 008C     time_display();
;PCODE: $000000EC VOL: 0
; 0000 008D }
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;
;interrupt [TIM1_COMPC] void time1_com(void)
; 0000 0090 {
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 0091     TCNT1 = 0x0000;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 0092     if(tog==0) tog++;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0093     else {
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0094         tog=0;
;PCODE: $000000F8 VOL: 0
; 0000 0095         if(set==0) count_up();
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0096     }
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 0097     if(set==1) command(0x88);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0098     else if(set==2) command(0x83);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0099 }
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;
;interrupt [EXT_INT4] void external_int4(void)
; 0000 009C {
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 009D     command(CURON);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 009E     if(set!=2) set++;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 009F     else set=0;
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00A0 }
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;
;interrupt [EXT_INT5] void external_int5(void)
; 0000 00A3 {
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00A4     if(set==1) {
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00A5         if(min!=59) min++;
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00A6         else min=0;
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00A7     }
;PCODE: $0000012C VOL: 0
; 0000 00A8     else if(set==2) {
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00A9         if(hour!=12) hour++;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00AA         else hour=1;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00AB     }
;PCODE: $0000013C VOL: 0
; 0000 00AC     time_display();
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00AD }
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
