/*
 * 201_03_073.c
 *
 * Created: 2018-12-06 ¿ÀÈÄ 2:26:56
 * Author: Administrator
 */
#include <mega128a.h>
#include <delay.h>

#asm
    .equ __lcd_port = 0x15
#endasm

#include <lcd.h>

int KeyMatrix();

void main(void)
{
    int keyx;
    lcd_init(16);
    DDRC = 0xff;
    PORTC = 0xff;
    DDRD = 0x0f;
    PORTD = 0x00;
    
while (1)
    {
        keyx = KeyMatrix();
        
        if(keyx == 0) {
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(0,0);
            lcd_puts("0");
        }
        else if(keyx == 1){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(1,0);
            lcd_puts("1");
        }  
         else if(keyx == 2){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(2,0);
            lcd_puts("2");
        } 
         else if(keyx == 3){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(3,0);
            lcd_puts("3");
        } 
         else if(keyx == 4){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(4,0);
            lcd_puts("4");
        } 
         else if(keyx == 5){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(5,0);
            lcd_puts("5");
        } 
         else if(keyx == 6){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(6,0);
            lcd_puts("6");
        } 
         else if(keyx == 7){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(7,0);
            lcd_puts("7");
        } 
         else if(keyx == 8){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(8,0);
            lcd_puts("8");
        } 
         else if(keyx == 9){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(9,0);
            lcd_puts("9");
        } 
         else if(keyx == 10){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(10,0);
            lcd_puts("A");
        } 
         else if(keyx == 11){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(11,0);
            lcd_puts("B");
        } 
         else if(keyx == 12){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(12,0);
            lcd_puts("C");
        } 
        else if(keyx == 13){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(13,0);
            lcd_puts("D");
        }                
        else if(keyx == 14){
            lcd_clear();
            delay_ms(2);
            lcd_gotoxy(14,0);
            lcd_puts("E");
        }              
        else lcd_clear();
    }
}

int KeyMatrix(){
    static unsigned char key = 0;
    int keyout = 0xfe;
    int i;
    for(i=0;i<=3;i++){
        PORTD = keyout;
        delay_ms(1);
        switch (PIND & 0xf0)
               {
               case 0x70: key = 0+i; break;
               case 0xB0: key = 4+i; break;
               case 0xD0: key = 8+i; break;
               case 0xE0: key = 12+i; break;               
               }
        keyout = (keyout << 1 ) + 0x01;
    }                                  
    return key;
}
    //LCD initial
    void lcd_init(void){
    DDRC = 0xff;
    PORTC &= 0xfb;
    delay_ms(15);
    command(0x20);
    delay_us(5);
    command(0x20);
    delay_us(100);
    command(0x20);
    command(FUNCSET);
    command(DISPON);
    command(ALLCLR);
    commadn(ENTMODE);
}
    //string print
void lcd_string1(char *str){
    while(*str) data(*str++);
}
//instruction write
void command(unsigned char byte){
    busy();
    //instruction upper byte
    PORTC = (byte & 0xf0);
    PORSTC &= 0xfe;
    PORTC &= 0xfd;
    delay_us(1);
    PORTC |= 0x04;
    delay_us(1);
    PORTC &= 0xfb;
    //instruction lower byte
    PORTC = ((byte <<4)&0xf0);
    PORTC &= 0xfe;
    PORTC &= 0xfd;
    delay_us(1);
    
    PORTC |= 0x04;
    delay_us(1);
    PORTC &= 0xfb;
}